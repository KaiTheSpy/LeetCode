/*
Prompt:

You are given a sorted integer array arr containing 1 and prime numbers, where all the integers of arr are unique. You are also given an integer k.

For every i and j where 0 <= i < j < arr.length, we consider the fraction arr[i] / arr[j].

Return the kth smallest fraction considered. Return your answer as an array of integers of size 2, where answer[0] == arr[i] and answer[1] == arr[j].

Example 1:

Input: arr = [1,2,3,5], k = 3
Output: [2,5]
Explanation: The fractions to be considered in sorted order are:
1/5, 1/3, 2/5, 1/2, 3/5, and 2/3.
The third fraction is 2/5.

Example 2:

Input: arr = [1,7], k = 1
Output: [1,7]

Constraints:

    2 <= arr.length <= 1000
    1 <= arr[i] <= 3 * 104
    arr[0] == 1
    arr[i] is a prime number for i > 0.
    All the numbers of arr are unique and sorted in strictly increasing order.
    1 <= k <= arr.length * (arr.length - 1) / 2

*/
import java.util.*;
class Solution {
    public int[] kthSmallestPrimeFraction(int[] arr, int k) {
        int[] sol = new int[2]; //What I'm returning
        //Brute force combos of all fractions:
        double[][] combos = new double[arr.length][arr.length];
        ArrayList<Double> mins = new ArrayList<Double>();
        //Adding all fraction combos
        for (int i = 0; i < combos.length; i++){
            for (int j = 0; j < combos.length; j++){
                if (i < j) {
                    combos[i][j] = fraction(arr[i], arr[j]);
                    mins.add(combos[i][j]);
                }
                   
            }
        }
        Collections.sort(mins);
        //Finding indexes of where the kth fraction is
        int i1 = 0;
        int i2 = 0;
        for (int c = 0; c < combos.length; c++){
            for (int d = 0; d < combos.length; d++){
                if (combos[c][d] == mins.get(k-1)){
                    i1 = c;
                    i2 = d;
                } 
            }
        }
        //Return integers corresponding at the indexes found
        sol[0] = arr[i1];
        sol[1] = arr[i2];
        return sol;
    }

    public double fraction(int i, int j){
        return (double) i / (double) j;
    }
}
